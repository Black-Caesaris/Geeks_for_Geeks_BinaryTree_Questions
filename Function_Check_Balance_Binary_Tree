/* A binary tree node structure
struct Node {
    int data;
    Node* left, * right;
}; */

// This function should return tree if passed  tree 
// is balanced, else false.  Time complexity should
//  be O(n) where n is number of nodes in tree
#define MAX(a,b)((a>b)?a:b)
int height(Node* node){
    if(node==NULL)return 0;
    else{
        return(max(height(node->left),height(node->right)) + 1);
    }
}
bool isBalanced(Node *root)
{   
    if(root ==  NULL){
        return 1 ;
    }
    int lh = height(root->left);
    int rh = height(root->right);
    if(lh - rh == 1 || rh-  lh == 1 || lh - rh == 0)
    {
    return 1;
        
    }
    else{
    return 0;
    }
    
    //  Your Code here
}
